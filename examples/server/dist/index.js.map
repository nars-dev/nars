{"version":3,"sources":["Colors.tsx","Form.tsx","../common/dist/Config.js","index.tsx"],"names":["Object","defineProperty","exports","value","nars_common_1","require","config","Form","props","backgroundColor","InputProp","string","textColor"],"mappings":"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","file":"index.js","sourceRoot":"..","sourcesContent":["export const offWhite = \"rgb(245,248,249)\";\nexport const dark = \"#283336\";\nexport const darkGreen = \"#169099\";\nexport const green = \"#24B7B2\";\nexport const lightGreen = \"#99D8B7\";\nexport const yellow = \"#E5BA39\";\nexport const orange = \"#E57A2D\";\n","import * as React from \"react\";\nimport { offWhite, yellow } from \"./Colors\";\nimport {\n  StyleSheet,\n  FlatList,\n  TextInput,\n  View,\n  Switch,\n  Text,\n  TouchableOpacity\n} from \"nars\";\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 20\n  },\n  textInput: {\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 3,\n    fontSize: 16,\n    fontFamily: \"Fira Code\",\n    color: offWhite,\n    backgroundColor: \"#369DA5\"\n  },\n  isCompany: {\n    fontSize: 16,\n    fontFamily: \"Fira Code\",\n    color: offWhite\n  },\n  submitText: {\n    borderRadius: 3,\n    fontSize: 16,\n    fontFamily: \"Fira Code\",\n    color: offWhite,\n    textAlign: \"center\",\n    paddingVertical: 15,\n    paddingHorizontal: 28,\n    backgroundColor: yellow\n  },\n  elementContainer: {\n    paddingTop: 20\n  },\n  companySwitchContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  centeredContents: { alignItems: \"center\" }\n});\n\nenum FieldType {\n  Bool,\n  String,\n  Submit\n}\n\ntype Field = { key: string } & (\n  | { fieldType: FieldType.String; name: string }\n  | { fieldType: FieldType.Bool; onSet: (_: boolean) => void; value: boolean }\n  | { fieldType: FieldType.Submit; onSubmit: () => void });\n\nconst toField = (field: string): Field => ({\n  key: field,\n  fieldType: FieldType.String,\n  name: field\n});\n\nconst computeFields = (isCompany: boolean) => ({\n  general: [\"name\", \"surname\", \"email\", \"role\"].map(toField),\n  userSpecific: isCompany\n    ? [\"Tax#\", \"Number of employees\"].map(toField)\n    : [\"ID number\", \"birthdate\"].map(toField)\n});\n\nconst renderItem = ({ item }: { item: Field }) => {\n  switch (item.fieldType) {\n    case FieldType.String:\n      return (\n        <View style={styles.elementContainer}>\n          <TextInput\n            placeholderTextColor={\"#7AC7CC\"}\n            style={styles.textInput}\n            placeholder={item.name}\n            value={undefined}\n          />\n        </View>\n      );\n    case FieldType.Bool:\n      return (\n        <View style={styles.elementContainer}>\n          <View style={styles.companySwitchContainer}>\n            <Text style={styles.isCompany}>{\"Are you a company\"}</Text>\n            <Switch onValueChange={item.onSet} value={item.value} />\n          </View>\n        </View>\n      );\n    case FieldType.Submit:\n      return (\n        <TouchableOpacity>\n          <View style={[styles.elementContainer, styles.centeredContents]}>\n            <Text style={styles.submitText}>{\"Submit\"}</Text>\n          </View>\n        </TouchableOpacity>\n      );\n    default:\n      throw \"Unreachable\";\n  }\n};\n\nfunction Form(props: { backgroundColor: string; textColor: string }) {\n  const [isCompany, setIsCompany] = React.useState(false);\n  const fields = computeFields(isCompany);\n  return (\n    <FlatList\n      style={{backgroundColor: props.backgroundColor}}\n      data={\n        [\n          ...fields.general,\n          {\n            fieldType: FieldType.Bool,\n            onSet: setIsCompany,\n            value: isCompany,\n            key: \"Is Company\"\n          },\n          ...fields.userSpecific,\n          { fieldType: FieldType.Submit, key: \"Submit\" }\n        ] as Field[]\n      }\n      keyExtractor={({ item: { key } }) => key}\n      renderItem={renderItem}\n    />\n  );\n}\n\nexport default Form;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst nars_common_1 = require(\"nars-common\");\n/*\n * Define Routes and the props\n */\nexports.config = {\n    Form: {\n        props: {\n            backgroundColor: nars_common_1.InputProp.string,\n            textColor: nars_common_1.InputProp.string\n        }\n    }\n};\n","import * as React from \"react\";\nimport { Static } from \"nars\";\nimport { Server } from \"ws\";\nimport Form from \"./Form\";\nimport { config } from \"../common\";\n\n/* Define which component is rendered per given route */\nconst components = {\n  Form: props => <Form {...props} />\n};\n\n/* It accepts any ComponentType so a function would also work:\nconst components = {\n  Form: (props) => <Form {...props} />\n};\n\n/* Create a router. config and components have to match! */\nconst router = Static.createRouter(config, components);\n\n/* Create a server */\nconst webSocketServer = new Server({ port: 9000 });\n\n/* Start listening for incoming requests */\nStatic.attatchListener(webSocketServer, router);\n"]}