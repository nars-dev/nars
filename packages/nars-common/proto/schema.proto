syntax = "proto3";
import "struct.proto";
import "nars_animated.proto";

/********** Generic **********/

message StringValue {
  string value = 1;
}

message Int32Value {
  int32 value = 1;
}

message Callback {
  int32 callId = 1;
}

message LocalProp {
  string localKey = 1;
  string propKey = 2;
}

message FloatValue {
  float value = 1;
}

/********** Components **********/

message CustomComponent {
  string type_id = 1;
  bytes contents = 2;
};

message View {
  google_mirror.protobuf.Struct style = 1;
  repeated ReactElement children = 2;
};

message FlatList {
  google_mirror.protobuf.Struct style = 1;
  Callback onEndReached = 2;
  Int32Value onEndReachedThreshold = 3;
  repeated ReactElement children = 4;
  repeated LocalProp localProps = 5;
};

message TouchableOpacity {
  Callback onPress = 1;
  repeated ReactElement children = 2;
  repeated LocalProp localProps = 3;
}

message RawText {
  string text = 1;
};

message Text {
  google_mirror.protobuf.Struct style = 1;
  repeated ReactElement children = 2;
  Int32Value numberOfLines = 3;
};

message TextInput {
  google_mirror.protobuf.Struct style = 1;
  StringValue placeholderTextColor = 2;
  StringValue placeholder = 3;
  string value = 4;
  repeated LocalProp localProps = 5;
  Callback onValueChange = 6;
};

message Switch {
  google_mirror.protobuf.Struct style = 1;
  bool value = 2;
  Callback onValueChange = 3;
}

message Image {
  google_mirror.protobuf.Struct style = 1;
  string sourceURLString = 2;
}

message ReactElement {
  StringValue key = 1;
  oneof value {
    CustomComponent custom = 2;
    View view = 3;
    FlatList flatList = 4;
    TouchableOpacity touchableOpacity = 5;
    TextInput textInput = 6;
    Text text = 7;
    RawText rawText = 8;
    Switch switch = 9;
    Image image = 10;
    AnimatedText animatedText = 11;
    AnimatedView animatedView = 12;
    AnimatedImage animatedImage = 13;
  }
};

/********** Messages **********/
message Unmount {};
message Render {
  string name = 1;
  google_mirror.protobuf.Struct props = 2;
  repeated string localProps = 3;
};
message Call {
  int32 messageId = 1;
  google_mirror.protobuf.Struct args = 2;
}

message ClientToServer {
  int32 rootId = 1;
  oneof value {
    Unmount unmount = 2;
    Render render = 3;
    Call call = 4;
  };
};

/* Unexpected error. TODO: Add more metadata. */
message Error {}
message Update {
  repeated ReactElement element = 1;
};

message ServerToClient {
  int32 rootId = 1;
  oneof value {
    Error error = 2;
    Update update = 3;
    /* Temporary solution for setting animated values imperatively
     * In the future there'll be a more generic mechanism to update
     * any subset of the tree
     */
    nars.animated.ValueUpdate animatedValueUpdate = 4;
  }
};

message AnimatedView {
  nars.animated.Style style = 1;
  repeated ReactElement children = 2;
};

message AnimatedText {
  nars.animated.Style style = 1;
  repeated ReactElement children = 2;
};

message AnimatedImage {
  nars.animated.Style style = 1;
  string sourceURLString = 2;
}
