// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Belt_HashMapString = require("bs-platform/lib/js/belt_HashMapString.js");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");

var rawTextInitializer = /* record */[/* contents */undefined];

var registry = Belt_HashMapString.make(6);

function add(name, createEncoder) {
  if (Belt_HashMapString.has(registry, name)) {
    throw [
          Caml_builtin_exceptions.invalid_argument,
          "Component with this name exists: " + name
        ];
  } else {
    return Belt_HashMapString.set(registry, name, createEncoder);
  }
}

function get(name) {
  return Belt_HashMapString.get(registry, name);
}

function registerRawTextEncodedReactElementInitializer(init) {
  rawTextInitializer[0] = init;
  return /* () */0;
}

function createRawTextEncodedReactElement(text) {
  return Curry._1(Belt_Option.getExn(rawTextInitializer[0]), text);
}

exports.get = get;
exports.add = add;
exports.registerRawTextEncodedReactElementInitializer = registerRawTextEncodedReactElementInitializer;
exports.createRawTextEncodedReactElement = createRawTextEncodedReactElement;
/* registry Not a pure module */
