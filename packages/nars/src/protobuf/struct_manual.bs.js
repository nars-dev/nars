// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Spec$Ocamlprotocplugin = require("ocaml-protoc-plugin-runtime-bs/src/ocaml_protoc_plugin/spec.bs.js");
var Serialize$Ocamlprotocplugin = require("ocaml-protoc-plugin-runtime-bs/src/ocaml_protoc_plugin/serialize.bs.js");
var Deserialize$Ocamlprotocplugin = require("ocaml-protoc-plugin-runtime-bs/src/ocaml_protoc_plugin/deserialize.bs.js");

function null_value_to_int(param) {
  return 0;
}

function null_value_from_int(n) {
  if (n !== 0) {
    return /* Error */Block.__(1, [/* `Unknown_enum_value */[
                353152616,
                n
              ]]);
  } else {
    return /* Ok */Block.__(0, [/* NULL_VALUE */0]);
  }
}

function fields_entry_name$prime(param) {
  return "Struct.google_mirror.protobuf.Struct.FieldsEntry";
}

function struct_name$prime(param) {
  return "Struct.google_mirror.protobuf.Struct";
}

function value_name$prime(param) {
  return "Struct.google_mirror.protobuf.Value";
}

function list_value_name$prime(param) {
  return "Struct.google_mirror.protobuf.ListValue";
}

function fields_entry_to_proto(t_) {
  var spec = Curry._2(Spec$Ocamlprotocplugin.Serialize.C.$caret$colon$colon, Curry._1(Spec$Ocamlprotocplugin.Serialize.C.basic, /* tuple */[
            1,
            Spec$Ocamlprotocplugin.Serialize.C.string,
            Spec$Ocamlprotocplugin.Serialize.C.proto3
          ]), Curry._2(Spec$Ocamlprotocplugin.Serialize.C.$caret$colon$colon, Curry._1(Spec$Ocamlprotocplugin.Serialize.C.basic_opt, /* tuple */[
                2,
                Curry._1(Spec$Ocamlprotocplugin.Serialize.C.message, value_to_proto)
              ]), Spec$Ocamlprotocplugin.Serialize.C.nil));
  var serialize = Serialize$Ocamlprotocplugin.serialize(spec);
  var f = Curry._1(serialize, /* () */0);
  var param = t_;
  return Curry._2(f, param[0], param[1]);
}

function fields_entry_from_proto(writer_) {
  var constructor = function (a, b) {
    return /* tuple */[
            a,
            b
          ];
  };
  var spec = Curry._2(Spec$Ocamlprotocplugin.Deserialize.C.$caret$colon$colon, Curry._1(Spec$Ocamlprotocplugin.Deserialize.C.basic, /* tuple */[
            1,
            Spec$Ocamlprotocplugin.Deserialize.C.string,
            Spec$Ocamlprotocplugin.Deserialize.C.proto3
          ]), Curry._2(Spec$Ocamlprotocplugin.Deserialize.C.$caret$colon$colon, Curry._1(Spec$Ocamlprotocplugin.Deserialize.C.basic_opt, /* tuple */[
                2,
                Curry._1(Spec$Ocamlprotocplugin.Deserialize.C.message, value_from_proto)
              ]), Spec$Ocamlprotocplugin.Deserialize.C.nil));
  var deserialize = Deserialize$Ocamlprotocplugin.deserialize(spec, constructor);
  return Curry._1(deserialize, writer_);
}

function struct_to_proto(t_) {
  var spec = Curry._2(Spec$Ocamlprotocplugin.Serialize.C.$caret$colon$colon, Curry._1(Spec$Ocamlprotocplugin.Serialize.C.repeated, /* tuple */[
            1,
            Curry._1(Spec$Ocamlprotocplugin.Serialize.C.message, fields_entry_to_proto),
            Spec$Ocamlprotocplugin.Serialize.C.not_packed
          ]), Spec$Ocamlprotocplugin.Serialize.C.nil);
  var serialize = Serialize$Ocamlprotocplugin.serialize(spec);
  return Curry._2(serialize, /* () */0, t_);
}

function struct_from_proto(writer_) {
  var constructor = function (a) {
    return a;
  };
  var spec = Curry._2(Spec$Ocamlprotocplugin.Deserialize.C.$caret$colon$colon, Curry._1(Spec$Ocamlprotocplugin.Deserialize.C.repeated, /* tuple */[
            1,
            Curry._1(Spec$Ocamlprotocplugin.Deserialize.C.message, fields_entry_from_proto),
            Spec$Ocamlprotocplugin.Deserialize.C.not_packed
          ]), Spec$Ocamlprotocplugin.Deserialize.C.nil);
  var deserialize = Deserialize$Ocamlprotocplugin.deserialize(spec, constructor);
  return Curry._1(deserialize, writer_);
}

function value_to_proto(t_) {
  var spec = Curry._2(Spec$Ocamlprotocplugin.Serialize.C.$caret$colon$colon, Curry._1(Spec$Ocamlprotocplugin.Serialize.C.oneof, (function (param) {
              var variant = param[0];
              if (variant >= -663343517) {
                if (variant >= -483181849) {
                  if (variant >= 258787964) {
                    return Curry._1(Spec$Ocamlprotocplugin.Serialize.C.oneof_elem, /* tuple */[
                                4,
                                Spec$Ocamlprotocplugin.Serialize.C.bool,
                                param[1]
                              ]);
                  } else {
                    return Curry._1(Spec$Ocamlprotocplugin.Serialize.C.oneof_elem, /* tuple */[
                                5,
                                Curry._1(Spec$Ocamlprotocplugin.Serialize.C.message, struct_to_proto),
                                param[1]
                              ]);
                  }
                } else if (variant >= -654604135) {
                  return Curry._1(Spec$Ocamlprotocplugin.Serialize.C.oneof_elem, /* tuple */[
                              1,
                              Curry._1(Spec$Ocamlprotocplugin.Serialize.C.$$enum, null_value_to_int),
                              param[1]
                            ]);
                } else {
                  return Curry._1(Spec$Ocamlprotocplugin.Serialize.C.oneof_elem, /* tuple */[
                              3,
                              Spec$Ocamlprotocplugin.Serialize.C.string,
                              param[1]
                            ]);
                }
              } else if (variant >= -769490512) {
                return Curry._1(Spec$Ocamlprotocplugin.Serialize.C.oneof_elem, /* tuple */[
                            6,
                            Curry._1(Spec$Ocamlprotocplugin.Serialize.C.message, list_value_to_proto),
                            param[1]
                          ]);
              } else {
                return Curry._1(Spec$Ocamlprotocplugin.Serialize.C.oneof_elem, /* tuple */[
                            2,
                            Spec$Ocamlprotocplugin.Serialize.C.$$double,
                            param[1]
                          ]);
              }
            })), Spec$Ocamlprotocplugin.Serialize.C.nil);
  var serialize = Serialize$Ocamlprotocplugin.serialize(spec);
  return Curry._2(serialize, /* () */0, t_);
}

function value_from_proto(writer_) {
  var constructor = function (a) {
    return a;
  };
  var spec = Curry._2(Spec$Ocamlprotocplugin.Deserialize.C.$caret$colon$colon, Curry._1(Spec$Ocamlprotocplugin.Deserialize.C.oneof, /* :: */[
            Curry._1(Spec$Ocamlprotocplugin.Deserialize.C.oneof_elem, /* tuple */[
                  1,
                  Curry._1(Spec$Ocamlprotocplugin.Deserialize.C.$$enum, null_value_from_int),
                  (function (v) {
                      return /* `Null_value */[
                              -654604135,
                              v
                            ];
                    })
                ]),
            /* :: */[
              Curry._1(Spec$Ocamlprotocplugin.Deserialize.C.oneof_elem, /* tuple */[
                    2,
                    Spec$Ocamlprotocplugin.Deserialize.C.$$double,
                    (function (v) {
                        return /* `Number_value */[
                                -785426853,
                                v
                              ];
                      })
                  ]),
              /* :: */[
                Curry._1(Spec$Ocamlprotocplugin.Deserialize.C.oneof_elem, /* tuple */[
                      3,
                      Spec$Ocamlprotocplugin.Deserialize.C.string,
                      (function (v) {
                          return /* `String_value */[
                                  -663343517,
                                  v
                                ];
                        })
                    ]),
                /* :: */[
                  Curry._1(Spec$Ocamlprotocplugin.Deserialize.C.oneof_elem, /* tuple */[
                        4,
                        Spec$Ocamlprotocplugin.Deserialize.C.bool,
                        (function (v) {
                            return /* `Bool_value */[
                                    258787964,
                                    v
                                  ];
                          })
                      ]),
                  /* :: */[
                    Curry._1(Spec$Ocamlprotocplugin.Deserialize.C.oneof_elem, /* tuple */[
                          5,
                          Curry._1(Spec$Ocamlprotocplugin.Deserialize.C.message, struct_from_proto),
                          (function (v) {
                              return /* `Struct_value */[
                                      -483181849,
                                      v
                                    ];
                            })
                        ]),
                    /* :: */[
                      Curry._1(Spec$Ocamlprotocplugin.Deserialize.C.oneof_elem, /* tuple */[
                            6,
                            Curry._1(Spec$Ocamlprotocplugin.Deserialize.C.message, list_value_from_proto),
                            (function (v) {
                                return /* `List_value */[
                                        -769490512,
                                        v
                                      ];
                              })
                          ]),
                      /* [] */0
                    ]
                  ]
                ]
              ]
            ]
          ]), Spec$Ocamlprotocplugin.Deserialize.C.nil);
  var deserialize = Deserialize$Ocamlprotocplugin.deserialize(spec, constructor);
  return Curry._1(deserialize, writer_);
}

function list_value_to_proto(t_) {
  var spec = Curry._2(Spec$Ocamlprotocplugin.Serialize.C.$caret$colon$colon, Curry._1(Spec$Ocamlprotocplugin.Serialize.C.repeated, /* tuple */[
            1,
            Curry._1(Spec$Ocamlprotocplugin.Serialize.C.message, value_to_proto),
            Spec$Ocamlprotocplugin.Serialize.C.not_packed
          ]), Spec$Ocamlprotocplugin.Serialize.C.nil);
  var serialize = Serialize$Ocamlprotocplugin.serialize(spec);
  return Curry._2(serialize, /* () */0, t_);
}

function list_value_from_proto(writer_) {
  var constructor = function (a) {
    return a;
  };
  var spec = Curry._2(Spec$Ocamlprotocplugin.Deserialize.C.$caret$colon$colon, Curry._1(Spec$Ocamlprotocplugin.Deserialize.C.repeated, /* tuple */[
            1,
            Curry._1(Spec$Ocamlprotocplugin.Deserialize.C.message, value_from_proto),
            Spec$Ocamlprotocplugin.Deserialize.C.not_packed
          ]), Spec$Ocamlprotocplugin.Deserialize.C.nil);
  var deserialize = Deserialize$Ocamlprotocplugin.deserialize(spec, constructor);
  return Curry._1(deserialize, writer_);
}

exports.null_value_to_int = null_value_to_int;
exports.null_value_from_int = null_value_from_int;
exports.fields_entry_name$prime = fields_entry_name$prime;
exports.struct_name$prime = struct_name$prime;
exports.value_name$prime = value_name$prime;
exports.list_value_name$prime = list_value_name$prime;
exports.fields_entry_to_proto = fields_entry_to_proto;
exports.fields_entry_from_proto = fields_entry_from_proto;
exports.struct_to_proto = struct_to_proto;
exports.struct_from_proto = struct_from_proto;
exports.value_to_proto = value_to_proto;
exports.value_from_proto = value_from_proto;
exports.list_value_to_proto = list_value_to_proto;
exports.list_value_from_proto = list_value_from_proto;
/* Serialize-Ocamlprotocplugin Not a pure module */
