(************************************************)
(*       AUTOGENERATED FILE - DO NOT EDIT!      *)
(************************************************)
(* Generated by: ocaml-protoc-plugin            *)
(* https://github.com/issuu/ocaml-protoc-plugin *)
(************************************************)
(*
   Source: struct.proto
   Syntax: proto3 
   Parameters:
     annot=''
     debug=false
     opens=[]
     int64_as_int=false
     int32_as_int=true
     fixed_as_int=false
     singleton_record=false
*)
module Google_mirror = struct
  module Protobuf = struct
    module rec NullValue : sig
      type t = NULL_VALUE 
      val to_int: t -> int
      val from_int: int -> t Ocaml_protoc_plugin.Result.t
    end = struct 
      type t = NULL_VALUE 
      let to_int = function
        | NULL_VALUE -> 0
      
      let from_int = function
        | 0 -> Ok NULL_VALUE
        | n -> Error (`Unknown_enum_value n)
      
    end
    and Struct : sig
      module rec FieldsEntry : sig
        val name': unit -> string
        type t = (string * Value.t option) 
        val to_proto: t -> Ocaml_protoc_plugin.Writer.t
        val from_proto: Ocaml_protoc_plugin.Reader.t -> t Ocaml_protoc_plugin.Result.t
      end
      val name': unit -> string
      type t = FieldsEntry.t list 
      val to_proto: t -> Ocaml_protoc_plugin.Writer.t
      val from_proto: Ocaml_protoc_plugin.Reader.t -> t Ocaml_protoc_plugin.Result.t
    end = struct 
      module rec FieldsEntry : sig
        val name': unit -> string
        type t = (string * Value.t option) 
        val to_proto: t -> Ocaml_protoc_plugin.Writer.t
        val from_proto: Ocaml_protoc_plugin.Reader.t -> t Ocaml_protoc_plugin.Result.t
      end = struct 
        let name' () = "Struct.google_mirror.protobuf.Struct.FieldsEntry"
        type t = (string * Value.t option) 
        let to_proto t = 
          let apply = fun ~f (a, b) -> f a b in
          let spec = Ocaml_protoc_plugin.Serialize.C.( basic (1, string, proto3) ^:: basic_opt (2, (message Value.to_proto)) ^:: nil ) in
          let serialize = Ocaml_protoc_plugin.Serialize.serialize (spec) in
          apply ~f:(serialize ()) t
        
        let from_proto writer = 
          let constructor = fun a b -> (a, b) in
          let spec = Ocaml_protoc_plugin.Deserialize.C.( basic (1, string, proto3) ^:: basic_opt (2, (message Value.from_proto)) ^:: nil ) in
          let deserialize = Ocaml_protoc_plugin.Deserialize.deserialize (spec) constructor in
          deserialize writer
        
      end
      let name' () = "Struct.google_mirror.protobuf.Struct"
      type t = FieldsEntry.t list 
      let to_proto t = 
        let apply = fun ~f a -> f a in
        let spec = Ocaml_protoc_plugin.Serialize.C.( repeated (1, (message FieldsEntry.to_proto), not_packed) ^:: nil ) in
        let serialize = Ocaml_protoc_plugin.Serialize.serialize (spec) in
        apply ~f:(serialize ()) t
      
      let from_proto writer = 
        let constructor = fun a -> a in
        let spec = Ocaml_protoc_plugin.Deserialize.C.( repeated (1, (message FieldsEntry.from_proto), not_packed) ^:: nil ) in
        let deserialize = Ocaml_protoc_plugin.Deserialize.deserialize (spec) constructor in
        deserialize writer
      
    end
    and Value : sig
      val name': unit -> string
      type t = [ `Null_value of NullValue.t | `Number_value of float | `String_value of string | `Bool_value of bool | `Struct_value of Struct.t | `List_value of ListValue.t ] 
      val to_proto: t -> Ocaml_protoc_plugin.Writer.t
      val from_proto: Ocaml_protoc_plugin.Reader.t -> t Ocaml_protoc_plugin.Result.t
    end = struct 
      let name' () = "Struct.google_mirror.protobuf.Value"
      type t = [ `Null_value of NullValue.t | `Number_value of float | `String_value of string | `Bool_value of bool | `Struct_value of Struct.t | `List_value of ListValue.t ] 
      let to_proto t = 
        let apply = fun ~f a -> f a in
        let spec = Ocaml_protoc_plugin.Serialize.C.( oneof ((function `Null_value v -> oneof_elem (1, (enum NullValue.to_int), v) | `Number_value v -> oneof_elem (2, double, v) | `String_value v -> oneof_elem (3, string, v) | `Bool_value v -> oneof_elem (4, bool, v) | `Struct_value v -> oneof_elem (5, (message Struct.to_proto), v) | `List_value v -> oneof_elem (6, (message ListValue.to_proto), v))) ^:: nil ) in
        let serialize = Ocaml_protoc_plugin.Serialize.serialize (spec) in
        apply ~f:(serialize ()) t
      
      let from_proto writer = 
        let constructor = fun a -> a in
        let spec = Ocaml_protoc_plugin.Deserialize.C.( oneof ([ oneof_elem (1, (enum NullValue.from_int), fun v -> `Null_value v); oneof_elem (2, double, fun v -> `Number_value v); oneof_elem (3, string, fun v -> `String_value v); oneof_elem (4, bool, fun v -> `Bool_value v); oneof_elem (5, (message Struct.from_proto), fun v -> `Struct_value v); oneof_elem (6, (message ListValue.from_proto), fun v -> `List_value v) ]) ^:: nil ) in
        let deserialize = Ocaml_protoc_plugin.Deserialize.deserialize (spec) constructor in
        deserialize writer
      
    end
    and ListValue : sig
      val name': unit -> string
      type t = Value.t list 
      val to_proto: t -> Ocaml_protoc_plugin.Writer.t
      val from_proto: Ocaml_protoc_plugin.Reader.t -> t Ocaml_protoc_plugin.Result.t
    end = struct 
      let name' () = "Struct.google_mirror.protobuf.ListValue"
      type t = Value.t list 
      let to_proto t = 
        let apply = fun ~f a -> f a in
        let spec = Ocaml_protoc_plugin.Serialize.C.( repeated (1, (message Value.to_proto), not_packed) ^:: nil ) in
        let serialize = Ocaml_protoc_plugin.Serialize.serialize (spec) in
        apply ~f:(serialize ()) t
      
      let from_proto writer = 
        let constructor = fun a -> a in
        let spec = Ocaml_protoc_plugin.Deserialize.C.( repeated (1, (message Value.from_proto), not_packed) ^:: nil ) in
        let deserialize = Ocaml_protoc_plugin.Deserialize.deserialize (spec) constructor in
        deserialize writer
      
    end
  end
end
