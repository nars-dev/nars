// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Js_dict = require("bs-platform/lib/js/js_dict.js");
var Js_json = require("bs-platform/lib/js/js_json.js");

function convert(json) {
  var match = Js_json.classify(json);
  if (typeof match === "number") {
    switch (match) {
      case /* JSONFalse */0 :
          return /* `Bool_value */[
                  258787964,
                  false
                ];
      case /* JSONTrue */1 :
          return /* `Bool_value */[
                  258787964,
                  true
                ];
      case /* JSONNull */2 :
          return /* `Null_value */[
                  -654604135,
                  /* NULL_VALUE */0
                ];
      
    }
  } else {
    switch (match.tag | 0) {
      case /* JSONString */0 :
          return /* `String_value */[
                  -663343517,
                  match[0]
                ];
      case /* JSONNumber */1 :
          return /* `Number_value */[
                  -785426853,
                  match[0]
                ];
      case /* JSONObject */2 :
          return /* `Struct_value */[
                  -483181849,
                  convertObject(match[0])
                ];
      case /* JSONArray */3 :
          return /* `List_value */[
                  -769490512,
                  $$Array.to_list(match[0].map(convert))
                ];
      
    }
  }
}

function convertObject(dict) {
  return $$Array.to_list($$Array.map((function (param) {
                    return /* tuple */[
                            param[0],
                            convert(param[1])
                          ];
                  }), Js_dict.entries(dict)));
}

var convertExn = convertObject;

exports.convert = convert;
exports.convertObject = convertObject;
exports.convertExn = convertExn;
/* No side effect */
