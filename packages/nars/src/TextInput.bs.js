// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var ProtoEncoders = require("./ProtoEncoders.bs.js");
var StructDecoders = require("./StructDecoders.bs.js");
var ComponentRegistry = require("./ComponentRegistry.bs.js");

var name = "TextInput";

function encoder(key, param, bridge, param$1) {
  var props = param[0];
  return {
          key: key,
          value: /* `TextInput */[
            -119655427,
            {
              style: ProtoEncoders.encodeStyleOptional(props),
              placeholderTextColor: ProtoEncoders.optionFlatten(ProtoEncoders.encodeOptional(props.placeholderTextColor, (function (value) {
                          return ProtoEncoders.encodeNullable(value, ProtoEncoders.encodeString);
                        }))),
              placeholder: ProtoEncoders.encodeOptional(props.placeholder, ProtoEncoders.encodeString),
              value: props.value,
              localProps: /* [] */0,
              onValueChange: ProtoEncoders.encodeOptional(props.onValueChange, (function (callback) {
                      return ProtoEncoders.encodeCallback(bridge.registerCallback, (function (args) {
                                    return Curry._1(callback, StructDecoders.getFieldExn("value", args, StructDecoders.getString));
                                  }));
                    }))
            }
          ]
        };
}

ComponentRegistry.add(name, encoder);

exports.name = name;
exports.encoder = encoder;
/*  Not a pure module */
