// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Callback = require("./Callback.bs.js");
var Js_option = require("bs-platform/lib/js/js_option.js");
var ProtoEncoders = require("./ProtoEncoders.bs.js");
var ComponentRegistry = require("./ComponentRegistry.bs.js");

var name = "TouchableOpacity";

function encoder(key, param, rpcInterface, children) {
  var onPress = ProtoEncoders.encodeCallbackOptional(rpcInterface, Js_option.map((function (callback) {
              return Callback.map((function (param) {
                            return /* () */0;
                          }), callback);
            }), param[0].onPress));
  return {
          key: key,
          value: /* `TouchableOpacity */[
            -711832046,
            {
              onPress: onPress,
              children: $$Array.to_list(children),
              localProps: /* [] */0
            }
          ]
        };
}

ComponentRegistry.add(name, encoder);

exports.name = name;
exports.encoder = encoder;
/*  Not a pure module */
